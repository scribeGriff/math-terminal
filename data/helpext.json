{
  "fft": "Description: Computes a fourier transform of an array of arbitrary length.  Uses a radix-2 FFT algorithm if the length is a power of 2 and a DFT otherwise.  Accepts an optional integer value for the power of the FFT.  Syntax: y = fft(x); or, optionally, y = fft(x, 16); where x is an array of real or complex values.  Returns a complex array.  Example: x = [0,1,2,3]; y = fft(x);  See also: re, im, ifft, fsps, conv",

  "ifft": "Description: Computes an inverse fourier transform of an array of arbitrary length.  Uses a radix-2 FFT algorithm if the length is a power of 2 and a DFT otherwise.  Accepts an optional integer value for the power of the FFT.  Syntax: x = ifft(y); or, optionally, x = ifft(y, 16); where y is an array of real or complex values.  Returns a complex array.  Example: x = [0,1,2,3]; y = fft(x); xr = ifft(y);  See also: re, im, fft, fsps, conv",

  "fsps": "Description: Computes the partial sums of the Fourier series of a waveform.  Requires an array of values representing the input waveform.  Accepts an optional values for number of sums (default is 3), number of cycles that are represented in the waveform (default is 1) and the fraction of the data to treat as a cycle (default is 1).  Syntax: y = fsps(data, [number of sums, number of cycles, fraction of cycle]).  Usage: y = fsps(x); or, optionally, y = fsps(x, 6, 1, 0.5);  Example: x = squarewave(); y = fsps(x); curve re(y)  See also: squarewave, trianglewave, sawtoothwave, fft, re, im, complex, curve",

  "conv": "Description: Performs a linear convolution of two signals using an N point circular convolution algorithm. Accepts optional position information.  Returns the convolved array y, and its position array n.  Syntax: y = conv(xdata, hdata); or, optionally, y = conv(xdata, hdata, xpos, hpos);  Example: xdata = [3, 11, 7, 0, -1, 4, 2]; hdata = [2, 3, 0, -5, 2, 1]; yc = conv(xdata, hdata); y = gety(yc); n = getn(yc); sample n y  See also: deconv, corr, gety, getn, getdata, sample",

  "deconv": "Description: Performs a deconvolution (polynomial long division) of numerator and denominator.  Accepts position information.  Returns quotient, q, remainder, r, and position information, qn and rn, for each.  First coefficient is assumed to be associated with highest order of the polynomial. For example, if the numerator was given as 1 + 2z^-1 + 2z^-2, then the numerator can be written as num = [1, 2, 2];  Syntax: qrem = deconv(num, den); or, optionally, qrem = deconv(num, den, numpos, denpos);  Example: (num = z^2 + z + 1 + z^-1 + z^-2 +z^-3) num = [1, 1, 1, 1, 1, 1]; nn = -2:3; (The zero index is at position 2 in num.) (den = z + 2 + z^-1) den = [1, 2, 1]; dn = -1: 1; (The zero index is at position 1 in den.) qrem = deconv(num, den, nn, dn); q = getq(qrem); r = getr(qrem); qn = getqn(qrem); rn = getrn(qrem);  See also: conv, corr, getq, getr, getqn, getrn, getdata",

  "corr": "Description: Performs a crosscorrelation of two sequences, seq1 and seq2, or, if seq2 is undefined, performs the autocorrelation of seq1.  Accepts position information. Returns the correlation sequence y, and its position information n.  Syntax: yc = corr(x1, x2); or, optionally, yc = corr(x1); or yc = corr(x1, x2, x1pos, x2pos);  Example (y(n) = x(n - 2) + w(n)): x = [3, 11, 7, 0, -1, 4, 2]; n = -3:3; (Shift n two places): nm2 = -1:5; (Generate gaussian noise): w = gauss(length(x)); (Create noise corrupted and shifted signal): seqsum = addseqs(x, w, nm2, nm2); (Compute cross correlation between x(n) and y(n)): xcorr = corr(x, gety(seqsum), n, getn(seqsum)); y = gety(xcorr); n = getn(xcorr); samplen n y  See also: conv, gety, getn, gauss, sample",

  "filter1d": "Description: Implements a 1D transposed direct form II digital filter structure. Supports FIR and IIR filters and inital and final conditions.  Requires b (numerator) coefficients, a (denominator) coefficients and input (for example, step or impulse).  Optionally accepts intial conditions.  Returns the filtered response y, and the final conditions z.  Syntax: h = filter1d(b, a, x); or, optionally, h = filter1d(b, a, x, z);  Example: x = impulse(141, 20); b = [1]; a = [1, -1, 0.9]; h = filter1d(b, a, x); y = gety(h);  z = getz(h);  s = math.sum(math.abs(y)); where y is the filtered response, z is the final conditions and s is the magnitude of the response.   See also, impulse, step, gety, getz, sample",

  "sinewave": "Description: Generates a sinewave.  All parameters are optional.  By default, amplitude = 1, cycles = 1, and data length = 512.  Syntax: sw = sinewave(); or, optionally, sw = sinewave(amp, cycles, len);  Example: amp = 12; cycles = 4; len = 300; sw = sinewave(amp, cycles, len);  See also: squarewave, trianglewave, sawtoothwave, impulse, step, gauss",

  "squarewave": "Description: Generates a squarewave.  All parameters are optional.  By default, amplitude = 1, cycles = 1, data length = 512 and scale = 20 (scale can change edge rate where scale = 1 is a sinewave).  Syntax: sqw = squarewave(); or, optionally, sqw = squarewave(amp, cycles, len, scale);  Example: amp = 12; cycles = 4; len = 300; scale = 40; sqw = squarewave(amp, cycles, len, scale);  See also: sinewave, trianglewave, sawtoothwave, impulse, step, gauss",

  "trianglewave": "Description: Generates a trianglewave.  All parameters are optional.  By default, amplitude = 1, cycles = 1, and data length = 512.  Syntax: tw = trianglewave(); or, optionally, tw = trianglewave(amp, cycles, len);  Example: amp = 12; cycles = 4; len = 300; tw = trianglewave(amp, cycles, length);  See also: sinewave, squarewave, sawtoothwave, impulse, step, gauss",

  "sawtoothwave": "Description: Generates a sawtoothwave.  All parameters are optional.  By default, amplitude = 1, cycles = 1, and data length = 512.  Syntax: saw = sawtoothwave(); or, optionally, saw = sawtoothwave(amp, cycles, length);  Example: amp = 12; cycles = 4; len = 300; saw = sawtoothwave(amp, cycles, len);  See also: sinewave, squarewave, trianglewave, impulse, step, gauss",

  "impulse": "Description: Generates an impulse waveform.  All parameters are optional.  By default, data length = 512 and impulse position is length / 4.  Syntax: im = impulse(); or, optionally, im = impulse(len, position);  Example: len = 300; position = 50; im = impulse(len, position);  See also: sinewave, squarewave, trianglewave, sawtoothwave, step, gauss",

  "step": "Description: Generates a step waveform.  All parameters are optional.  By default, data length = 512 and step position is length / 4.  Syntax: st = step(); or, optionally, st = step(len, position);  Example: len = 300; position = 50; st = step(len, position);  See also: sinewave, squarewave, trianglewave, sawtoothwave, impulse, gauss",

  "gauss": "Description: Generates a random (normal) waveform.  The length of the array is optional.  By default, data length = 512.  Syntax: gs = gauss(); or, optionally, gs = gauss(len);  Example: len = 300; gs = gauss(len);  See also: sinewave, squarewave, trianglewave, sawtoothwave, impulse, step",

  "line": "Description: Creates a line chart with space delimited arguments.  For example, line [1,2,3,4,5,12,14,-1]  Individual points are not displayed except on mouse over.  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, line [x1] [y1] [x2] [y2]  Syntax: line [x1] [y1] ... [xn] [yn] Example: x1 = -3:16; y1 = square(x1); y2 = cube(x1); line x1 y1 x1 y2  See also: bar, column, linepts, curve, curvepts, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "linepts": "Description: Creates a line chart with space delimited arguments.  For example, linepts [1,2,3,4,5,12,14,-1]  Individual data points are displayed in addition to the line connecting each point.  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, linepts [x1] [y1] [x2] [y2]  Syntax: linepts [x1] [y1] ... [xn] [yn] Example: x1 = -3:16; y1 = square(x1); y2 = cube(x1); linepts x1 y1 x1 y2  See also: bar, column, line, curve, curvepts, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "bar": "Description: Creates a bar chart with space delimited arguments.  For example, bar [1,2,3,4,5,12,14,-1]  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, bar [x1] [y1] [x2] [y2]  Syntax: bar [x1] [y1] ... [xn] [yn] X axis values that are an array of strings will be used at categories in the resultant plot.  Example: cat = [\"New York\", \"Los Angeles\", \"Seattle\", \"Boston\", \"Portland\"]; s1 = [47, 25, 102, 16, 33]; s2 = [191, 97, 29, 77, 112]; s3 = [35, 19, 209, 80, 67]; bar cat s1 cat s2 cat s3  See also: column, curve, line, linepts, curvepts, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "column": "Description: Creates a column chart with space delimited arguments.  For example, column [1,2,3,4,5,12,14,-1]  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, column [x1] [y1] [x2] [y2]  Syntax: column [x1] [y1] ... [xn] [yn] X axis values that are an array of strings will be used at categories in the resultant plot.  Example: cat = [\"New York\", \"Los Angeles\", \"Seattle\", \"Boston\", \"Portland\"]; s1 = [47, 25, 102, 16, 33]; s2 = [191, 97, 29, 77, 112]; s3 = [35, 19, 209, 80, 67]; column cat s1 cat s2 cat s3  See also: bar, curve, line, linepts, curvepts, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "curve": "Description: Creates a curve (spline) chart with space delimited arguments.  For example, curve [1,2,3,4,5,12,14,-1]  Individual points are not displayed except on mouse over.  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, curve [x1] [y1] [x2] [y2]  Syntax: curve [x1] [y1] ... [xn] [yn] Example: x1 = -3:16; y1 = square(x1); y2 = cube(x1); curve x1 y1 x1 y2  See also: bar, column, line, linepts, curvepts, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "curvepts": "Description: Creates a curve (spline) chart with space delimited arguments.  For example, curvepts [1,2,3,4,5,12,14,-1]  Individual data points are displayed in addition to a spline connecting each point.  If only a single argument is provided, it is assumed to be y axis data and is plotted against a linear x axis starting from point 0.  If more than one argument is provided, it is expected to be as alternating arrays of x data and y data.  For example, curvepts [x1] [y1] [x2] [y2]  Syntax: curvepts [x1] [y1] ... [xn] [yn] Example: x1 = -3:16; y1 = square(x1); y2 = cube(x1); curvepts x1 y1 x1 y2  See also: bar, column, line, linepts, curve, sample, samplen, polar, linlog, loglin, loglog, title, subtitle, xaxis, yaxis, series",

  "sample": "Description: Displays sample data at discrete sample points with a stem plot.  Arguments are space delimited.  The x axis is automatically generated as a sequence from 0 to length of data.  Accepts a single array of sample values or multiple arrays.  Does not accept timing information (see samplen). Syntax: sample y1 y2  Example: sample gauss() gauss()  See also: samplen, bar, column, line, linepts, curve, curvepts, polar, xaxis, yaxis, title, subtitle, series, gauss",

  "samplen": "Description: Displays sample data at discrete sample points with a stem plot.  Arguments are space delimited.  Accepts timing information. Accepts a single array of sample values or multiple arrays of data and timing.  Syntax: samplen n1 y1 n2 y2  Example: samplen -3:4  [3,6,-9,2.4,0,0,1,-4,-1,0,12]  See also: sample, bar, column, line, linepts, curve, curvepts, polar, xaxis, yaxis, title, subtitle, series, gauss",

  "polar": "Description: Creates a polar chart with space delimited arguments.  Accepts just the radian data as the angular steps are computed internally.  Syntax: polar rho1 ... rhon.  Example: x = 0:01:2*pi; polar sin(x) cos(x)  See also: sample, samplen, bar, column, line, linepts, curve, curvepts, xaxis, yaxis, title, subtitle, series, gauss",

  "linlog": "Description: This chart is the same as a line chart except with a logarithmic y axis.  Please see help line for more information.  See also: bar, column, line, linepts, curve, curvepts, sample, samplen, polar, loglin, loglog, linlogpts, title, subtitle, xaxis, yaxis, series",

  "loglin": "Description: This chart is the same as a line chart except with a logarithmic x axis.  Please see help line for more information.  See also: bar, column, line, linepts, curve, curvepts, sample, samplen, polar, linlog, loglog, loglinpts, title, subtitle, xaxis, yaxis, series",

  "loglog": "Description: This chart is the same as a line chart except with logarithmic x and y axes.  Please see help line for more information.  See also: bar, column, line, linepts, curve, curvepts, sample, samplen, polar, loglin, linlog, loglogpts, title, subtitle, xaxis, yaxis, series",

  "linlogpts": "Description: This chart is the same as a linepts chart except with a logarithmic y axis.  Please see help linepts for more information.  See also: bar, column, line, curve, curvepts, sample, samplen, polar, loglinpts, loglogpts, linlog, title, subtitle, xaxis, yaxis, series",

  "loglinpts": "Description: This chart is the same as a linepts chart except with a logarithmic x axis.  Please see help linepts for more information.  See also: bar, column, line, curve, curvepts, sample, samplen, polar, linlogpts, loglogpts, loglin, title, subtitle, xaxis, yaxis, series",

  "loglogpts": "Description: This chart is the same as a linepts chart except with logarithmic x and y axes.  Please see help linepts for more information.  See also: bar, column, line, curve, curvepts, sample, samplen, polar, loglinpts, linlogpts, loglog, title, subtitle, xaxis, yaxis, series",

  "xaxis": "Description: Adds a label to the x axis of the current chart.  The label argument is space delimited.  String name can be single or double quoted but apostrophes must be escaped with a backslash.  Syntax: xaxis 'This is the x axis'  Example: x = 1:10; y = square(x); sample x y  xaxis 'samples (n)' See also: bar, column, line, linepts, curve, curvepts, sample, samplen, title, subtitle, yaxis, series",

  "yaxis": "Description: Adds a label to the y axis of the current chart.  The label argument is space delimited.  String name can be single or double quoted but apostrophes must be escaped.  Syntax: yaxis 'This is the y axis'  Example: x = 1:10; y = square(x); sample x y  yaxis 'square (n)' See also: bar, column, line, linepts, curve, curvepts, sample, samplen, title, subtitle, xaxis, series",

  "title": "Description: Adds a title to the current chart.  Arguments are space delimited.  The title string is required and a color string for styling the title is optional.  String name can be single or double quoted but apostrophes must be escaped with a backslash.  Syntax: title 'This is the title' 'red'  Example: x = 1:10; y = square(x); sample x y  title 'The square of x' '#90ed7d' See also: bar, column, line, linepts, curve, curvepts, sample, samplen, subtitle, xaxis, yaxis, series",

  "subtitle": "Description: Adds a subtitle to the current chart.  Arguments are space delimited.  The subtitle string is required and a color string for styling the subtitle is optional.  String name can be single or double quoted but postrophes must be escaped with a backslash.  Syntax: subtitle 'This is the subtitle' 'red'  Example: x = 1:10; y = square(x); sample x y  title 'The square of x' '#90ed7d' subtitle 'for x from 1 to 10'  See also: bar, column, line, linepts, curve, curvepts, sample, samplen, title, xaxis, yaxis, series",

  "series": "Description: Changes the default series title that appears in the legend.  Accepts space delimited strings for each series whose name should be changed in the order they appear in the legend. String names can be single or double quoted but apostrophes must be escaped with a backslash. Syntax: series 'Series name 1' 'Series name 2'  Example: sample gauss() gauss()  series 'random series 1' 'random series 2'  See also: bar, column, line, linepts, curve, curvepts, sample, samplen, title, subtitle, xaxis, yaxis",

  "getdata": "Description: Functions that return multiple parameters return them as objects (for example, conv, deconv, corr, filter1d).  This function allows you to retrieve a specific parameter.  Parameter name should be double quoted.  Syntax: getdata(\"y\", myConv);  Example: xdata = [3, 11, 7, 0, -1, 4, 2]; hdata = [2, 3, 0, -5, 2, 1]; yc = conv(xdata, hdata); y = getdata(\"y\", yc); n = getdata(\"n\", yc); sample n y See also: gety, getn, getq, getqn, getr, getrn, getz, conv, deconv, corr, filter1d",

  "gety": "Description: A shortcut for y = getdata(\"y\", myVar);  Syntax: y = gety(myVar); Example: xdata = [3, 11, 7, 0, -1, 4, 2]; hdata = [2, 3, 0, -5, 2, 1]; yc = conv(xdata, hdata); y = gety(yc); n = getn(yc); samples(n,y)  See also: getdata, getn, getq, getqn, getr, getrn, getz, conv, corr",

  "getn": "Description: A shortcut for n = getdata(\"n\", myVar);  Syntax: n = getn(myVar); Example: xdata = [3, 11, 7, 0, -1, 4, 2]; hdata = [2, 3, 0, -5, 2, 1]; yc = conv(xdata, hdata); y = gety(yc); n = getn(yc); samples(n,y)  See also: getdata, gety, getq, getqn, getr, getrn, getz, conv, corr",

  "getq": "Description: A shortcut for q = getdata(\"q\", myVar);  Syntax: q = getq(myVar); Example:  num = [1, 1, 1, 1, 1, 1]; nn = range(-2, 3); den = [1, 2, 1]; dn = range(-1, 1); qrem = deconv(num, den, nn, dn); q = getq(qrem); r = getr(qrem); qn = getqn(qrem); rn = getrn(qrem);  See also: getdata, gety, getn, getqn, getr, getrn, getz, deconv",

  "getqn": "Description: A shortcut for qn = getdata(\"qn\", myVar);  Syntax: qn = getq(myVar); Example:  num = [1, 1, 1, 1, 1, 1]; nn = range(-2, 3); den = [1, 2, 1]; dn = range(-1, 1); qrem = deconv(num, den, nn, dn); q = getq(qrem); r = getr(qrem); qn = getqn(qrem); rn = getrn(qrem);  See also: getdata, gety, getn, getq, getr, getrn, getz, deconv",

  "getr": "Description: A shortcut for r = getdata(\"r\", myVar);  Syntax: r = getr(myVar); Example:  num = [1, 1, 1, 1, 1, 1]; nn = range(-2, 3); den = [1, 2, 1]; dn = range(-1, 1); qrem = deconv(num, den, nn, dn); q = getq(qrem); r = getr(qrem); qn = getqn(qrem); rn = getrn(qrem);  See also: getdata, gety, getn, getq, getqn, getrn, getz, deconv",

  "getrn": "Description: A shortcut for rn = getdata(\"rn\", myVar);  Syntax: rn = getrn(myVar); Example:  num = [1, 1, 1, 1, 1, 1]; nn = range(-2, 3); den = [1, 2, 1]; dn = range(-1, 1); qrem = deconv(num, den, nn, dn); q = getq(qrem); r = getr(qrem); qn = getqn(qrem); rn = getrn(qrem);  See also: getdata, gety, getn, getq, getqn, getr, getz, deconv",

  "getz": "Description: A shortcut for z = getdata(\"z\", myVar);  Syntax: z = getz(myVar); Example:  x = impulse(141, 20); b = [1]; a = [1, -1, 0.9]; h = filter1d(b, a, x); y = gety(h); z = getz(h);   See also: getdata, gety, getn, getq, getqn, getr, getrn, filter1d",

  "length": "Description: Returns the length of a one dimensional array.  Syntax: len = length(x);  Example: x = squarewave(); len = length(x);  See also: size",

  "addseqs": "Description: Adds two sequences (as arrays) including timing information.  Sequences do not have to be the same length.  Syntax: seqsum = addseqs(x, w, nx, nw);  Example: x = [3, 11, 7, 0, -1, 4, 2]; n = -3:3; nm2 = -1:5; w = gauss(length(x)); seqsum = addseqs(x, w, nm2, nm2); xcorr = corr(x, gety(seqsum), n, getn(seqsum));  See also: corr, add, gety, getn",

  "vars": "Description: Displays the terminal variables that have been defined to the scope using the equal sign.  Syntax: vars  Example: x = 3; y = [1,2,3,4]; vars  Displays x, y  See also: loadvars, savevars, importfile, importurl, importlog",

  "loadvars": "Description: Loads the terminal variables that have been saved to local storage using the savevars command.  To permanently remove stored variables, use the console command clear storage.  Syntax: loadvars  See also: vars, savevars, importfile, importurl, importlog",

  "savevars": "Description: Saves the terminal variables to local storage.  To permanently remove stored variables, use the console command clear storage. Syntax: savevars  See also: vars, loadvars, importfile, importurl, importlog",
  
  "importfile": "Description: Imports a csv file from the local computer to workspace variables.  The csv file is assumed to have the first row as a header.   Syntax: importfile  Example: importfile  See also: importurl, importlog, vars, loadvars, savevars",

  "importurl": "Description: Imports JSON formatted data from a url.  Syntax: importurl 'path/to/url'  See also: importfile, importlog, vars, loadvars, savevars",

  "importlog": "Description: Provides information on the most recent import, either from a local file or a url. Syntax: importlog  See also: importfile, importurl, vars, loadvars, savevars"
}